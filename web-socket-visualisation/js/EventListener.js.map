{"version":3,"sources":["EventListener.es6"],"names":[],"mappings":"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","file":"EventListener.js","sourcesContent":["\"use strict\";\r\n\r\nconst SseEvent = (function () {\r\n    return class SseEvent {\r\n        constructor(dict, parent) {\r\n            this.parent = parent;\r\n            this.type = dict.event;\r\n            this.timeStamp = new Date(dict.t['@datetime'] * 1000);\r\n            this.data = dict.data;\r\n            this._view = new JSONFormatter(this.data, 0, {\r\n                hoverPreviewEnabled: true,\r\n                hoverPreviewArrayCount: 100,\r\n                hoverPreviewFieldCount: 5,\r\n                theme: '',\r\n                animateOpen: false,\r\n                animateClose: false\r\n            });\r\n        }\r\n\r\n        view() {\r\n            let text = (text) => $(\"<td/>\").text(text);\r\n            let time = text(dateFormat(this.timeStamp, \"HH:MM:ss.l\"));\r\n            let source = text(this.parent.name);\r\n            let type = text(this.type);\r\n            let json = $(\"<td/>\").append(this._view.render());\r\n            return $(`<tr source='${this.parent.name}'/>`)\r\n                .append([time, source, type, json])\r\n                .attr(\"metatype\", this.type);\r\n        }\r\n    };\r\n})();\r\n\r\nconst EventListener = (function () {\r\n    let EventListener = class {\r\n        constructor(sse, parent) {\r\n            this.parent = parent;\r\n\r\n            this.sse = sse;\r\n            this.connection = new EventSource(sse);\r\n            this.connection.parent = this;\r\n            this.connection.onerror = () => {\r\n                if (this.parent && this.parent.setStatus)\r\n                    this.parent.setStatus(\"lost_connection\")\r\n            };\r\n            this.connection.onopen = () => {\r\n                if (this.parent && this.parent.setStatus)\r\n                    this.parent.setStatus(\"open_connection\")\r\n            };\r\n            this.connection.onmessage = this.onmsg;\r\n\r\n            this.node = EventListener.pattern.clone();\r\n            this.node.find(\".panel-heading\").text(parent.name);\r\n            this.handlers = [];\r\n\r\n            this.log = SortedList.create({\r\n                compare: (x, y) => {\r\n                    if (x.timeStamp > y.timeStamp) return 1;\r\n                    else if (x.timeStamp < y.timeStamp) return -1;\r\n                    else return 0;\r\n                }\r\n            });\r\n        }\r\n\r\n        close() {\r\n            this.connection.close();\r\n        }\r\n\r\n        msg(f) {\r\n            if (typeof f === \"function\")\r\n                this.handlers.push(f);\r\n        }\r\n\r\n        onmsg(e) {\r\n            let self;\r\n            if (this instanceof EventListener)\r\n                self = this;\r\n            else\r\n                self = this.parent;\r\n            let data = e.data;\r\n            if (data === \"INIT\" || data === \"PING\") {\r\n                console.log(data);\r\n                return;\r\n            }\r\n\r\n            let event = new SseEvent(JSON.parse(data), self.parent);\r\n            console.info(event);\r\n            self.log.push(event);\r\n            if (self.parent) self.parent.event(event);\r\n            self.node.find('tbody').append(event.view());\r\n            for (let f of self.handlers) {\r\n                f(event);\r\n            }\r\n        }\r\n    };\r\n\r\n    let pattern = `\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading flex-h\"></div>\r\n            <table class=\"table\" cellspacing=\"0\" width=\"100%\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Time</th>\r\n                        <th>Source</th>\r\n                        <th>Type</th>\r\n                        <th>Data</th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    `;\r\n    EventListener.pattern = $(pattern);\r\n\r\n    //EventListener.objects = {};\r\n    return EventListener;\r\n})();"]}